<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Pavel Demyanenko]]></title>
  <link href="http://paveldemyanenko.github.io/atom.xml" rel="self"/>
  <link href="http://paveldemyanenko.github.io/"/>
  <updated>2015-01-13T19:28:24+03:00</updated>
  <id>http://paveldemyanenko.github.io/</id>
  <author>
    <name><![CDATA[Pavel Demyanenko]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Приквел к Sails]]></title>
    <link href="http://paveldemyanenko.github.io/blog/2015/01/11/prikviel-k-sails/"/>
    <updated>2015-01-11T20:50:46+03:00</updated>
    <id>http://paveldemyanenko.github.io/blog/2015/01/11/prikviel-k-sails</id>
    <content type="html"><![CDATA[<p>Sails спроектирован так, чтобы быть похожим на фреймворк Ruby on Rails, но направленный на нужды современных приложений: data-driven API с масштабируемой архитектурой. Этот фреймворк особенно хорош для чатов, игр и для всего того, что работает в режиме реального времени. Можно, конечно, использовать и для любых других типов веб приложений. Чтобы понять почему это всё может пригодиться,  надо понять как устроена экосистема node.js проектов.</p>

<!--more-->


<p>Чтобы продемонстрировать примерную схему работы в Node.js создадим веб-сервер, роутер и контроллер.
Важно понимать, что Node.js сам по себе не делает ничего «из коробки». Один из встроенных модулей позволяет без особых усилий создать простой HTTP-сервер.</p>

<div><script src='https://gist.github.com/6ec3a5d280cea2b9299e.js?file=server.js'></script>
<noscript><pre><code>var http = require(&quot;http&quot;);
var url = require(&quot;url&quot;);

function example(route, routes) {
    function onRequest(req, res) {
        var pathname = url.parse(req.url).pathname;
        console.log(&quot;Request for &quot; + pathname + &quot; recieved.&quot;);
        route(pathname, routes, res);
    }

    http.createServer(onRequest).listen(1337);
    console.log(&quot;Server running at http://127.0.0.1:1337/&quot;);
}

exports.example = example;</code></pre></noscript></div>




<div><script src='https://gist.github.com/e2cddca88214359c7933.js?file=router.js'></script>
<noscript><pre><code>function route(pathname, routes, res) {
    console.log(&quot;About to route a request for &quot; + pathname)
    if (typeof routes[pathname] === &quot;function&quot;) {
        routes[pathname](res);
    } else {
        console.log(&quot;No request found for &quot; + pathname)
    }
}

exports.route = route;</code></pre></noscript></div>




<div><script src='https://gist.github.com/b9aa2e1cfd6a152ab3a8.js?file=fooController.js'></script>
<noscript><pre><code>function index(res) {
    console.log(&quot;Action index was called&quot;);
    res.writeHead(200, {
        &quot;Content-type&quot;: &quot;text/plain&quot;
    });


    var users = {
        user1: &quot;Jack White&quot;,
        user2: &quot;Jack Black&quot;,
        user3: &quot;Jack Grey&quot;
    };

    for (user in users) {
        console.log(users[user]);
        res.write(users[user] + &quot;\n&quot;);
    }
    res.end();
}

function show(res) {
    console.log(&quot;Action show was called&quot;);
    res.writeHead(200, {
        &quot;Content-type&quot;: &quot;text/plain&quot;
    });
    var users = {
        user1: &quot;Jack White&quot;,
        user2: &quot;Jack Black&quot;,
        user3: &quot;Jack Grey&quot;
    };
    res.write(users[user1]);
    res.end();
}

exports.index = index;
exports.show = show;</code></pre></noscript></div>


<p>И index.js, в котором будут подключены нужные файлы и сконфигурированы файлы.</p>

<div><script src='https://gist.github.com/76428d600a969e952b0f.js?file=index.js'></script>
<noscript><pre><code>var server = require(&quot;./server&quot;);
var router = require(&quot;./router&quot;);
var fooController = require(&quot;./fooController&quot;);

var routes = {};

routes[&quot;/index&quot;] = fooController.index;
routes[&quot;/show&quot;] = fooController.show;

server.example(router.route, routes);</code></pre></noscript></div>


<p>Как видно уже получается пачка кода, а ничего почти не сделано.</p>

<h3>Сколько времени уйдёт на создание мощного RESTful JSON API?</h3>

<p>Ровно столько, сколько займут эти команды:</p>

<p><code>$ sails new jsonapi</code></p>

<p><code>$ cd jsonapi</code></p>

<p><code>$ sails generate user</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Настройка базы данных в Sails]]></title>
    <link href="http://paveldemyanenko.github.io/blog/2015/01/09/nastroika-bazy-dannykh-v-sails/"/>
    <updated>2015-01-09T17:50:10+03:00</updated>
    <id>http://paveldemyanenko.github.io/blog/2015/01/09/nastroika-bazy-dannykh-v-sails</id>
    <content type="html"><![CDATA[<p>В Sails приложениях адаптеры выступают посредниками между приложением и базой данных. Конкретнее, как плагины для <a href="https://github.com/balderdashy/waterline">Waterline</a>, <a href="https://ru.wikipedia.org/wiki/ORM">ORM</a> для работы с базой данных. Настройка этих адаптеров происходит в файле config/connections.js</p>

<!--more-->


<p>Файл connection.js позволяет создавать разные глобальные настройки, которые можно подмиксовывоть в модели. Опция по умолчанаю будет автоматически подмиксовываться в модель, если в ней не указан адаптер. Важно помнить, что когда указывается адаптер в моделе, то перезаписывается настройка по умолчанию.</p>

<p>Важно отметить, что если используются секретные данные (passwords, API keys), то их нужно назначать в файле config/local.js, он добвлен в .gitignore по умолчанию.</p>

<figure class='code'><figcaption><span>local_example.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">connections</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">mysql</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">adapter</span><span class="o">:</span> <span class="s1">&#39;sails-mysql&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">host</span><span class="o">:</span> <span class="s1">&#39;localhost&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">user</span><span class="o">:</span> <span class="s1">&#39;tutorialuser&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">password</span><span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">database</span><span class="o">:</span> <span class="s1">&#39;tutorialdb&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">charset</span><span class="o">:</span> <span class="s1">&#39;utf8&#39;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">models</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">connection</span><span class="o">:</span> <span class="s1">&#39;mysql&#39;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">session</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">secret</span><span class="o">:</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">port</span><span class="o">:</span> <span class="mi">1337</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">environment</span><span class="o">:</span> <span class="s1">&#39;development&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">log</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">level</span><span class="o">:</span> <span class="s1">&#39;info&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>connection.js</span><a href='http://sailsjs.org/#/documentation/anatomy/myApp/config/connections.js.html'>Sails Documentation </a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* Connections</span>
</span><span class='line'><span class="cm">* (sails.config.connections)</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">* `Connections` are like &quot;saved settings&quot; for your adapters.  What&#39;s the difference between</span>
</span><span class='line'><span class="cm">* a connection and an adapter, you might ask?  An adapter (e.g. `sails-mysql`) is generic--</span>
</span><span class='line'><span class="cm">* it needs some additional information to work (e.g. your database host, password, user, etc.)</span>
</span><span class='line'><span class="cm">* A `connection` is that additional information.</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">* Each model must have a `connection` property (a string) which is references the name of one</span>
</span><span class='line'><span class="cm">* of these connections.  If it doesn&#39;t, the default `connection` configured in `config/models.js`</span>
</span><span class='line'><span class="cm">* will be applied.  Of course, a connection can (and usually is) shared by multiple models.</span>
</span><span class='line'><span class="cm">* .</span>
</span><span class='line'><span class="cm">* Note: If you&#39;re using version control, you should put your passwords/api keys</span>
</span><span class='line'><span class="cm">* in `config/local.js`, environment variables, or use another strategy.</span>
</span><span class='line'><span class="cm">* (this is to prevent you inadvertently sensitive credentials up to your repository.)</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">* For more information on configuration, check out:</span>
</span><span class='line'><span class="cm">* http://links.sailsjs.org/docs/config/connections</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">.</span><span class="nx">connections</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Local disk storage for DEVELOPMENT ONLY</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="c1">// Installed by default.</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="nx">localDiskDb</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">adapter</span><span class="o">:</span> <span class="s1">&#39;sails-disk&#39;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// MySQL is the world&#39;s most popular relational database.</span>
</span><span class='line'>  <span class="c1">// http://en.wikipedia.org/wiki/MySQL</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="c1">// Run:</span>
</span><span class='line'>  <span class="c1">// npm install sails-mysql</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="nx">someMysqlServer</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">adapter</span><span class="o">:</span> <span class="s1">&#39;sails-mysql&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">host</span><span class="o">:</span> <span class="s1">&#39;YOUR_MYSQL_SERVER_HOSTNAME_OR_IP_ADDRESS&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">user</span><span class="o">:</span> <span class="s1">&#39;YOUR_MYSQL_USER&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">password</span><span class="o">:</span> <span class="s1">&#39;YOUR_MYSQL_PASSWORD&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">database</span><span class="o">:</span> <span class="s1">&#39;YOUR_MYSQL_DB&#39;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// MongoDB is the leading NoSQL database.</span>
</span><span class='line'>  <span class="c1">// http://en.wikipedia.org/wiki/MongoDB</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="c1">// Run:</span>
</span><span class='line'>  <span class="c1">// npm install sails-mongo</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="nx">someMongodbServer</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">adapter</span><span class="o">:</span> <span class="s1">&#39;sails-mongo&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">host</span><span class="o">:</span> <span class="s1">&#39;localhost&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">port</span><span class="o">:</span> <span class="mi">27017</span><span class="p">,</span>
</span><span class='line'>    <span class="c1">// user: &#39;username&#39;,</span>
</span><span class='line'>    <span class="c1">// password: &#39;password&#39;,</span>
</span><span class='line'>    <span class="c1">// database: &#39;your_mongo_db_name_here&#39;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// PostgreSQL is another officially supported relational database.</span>
</span><span class='line'>  <span class="c1">// http://en.wikipedia.org/wiki/PostgreSQL</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="c1">// Run:</span>
</span><span class='line'>  <span class="c1">// npm install sails-postgresql</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="nx">somePostgresqlServer</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">adapter</span><span class="o">:</span> <span class="s1">&#39;sails-postgresql&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">host</span><span class="o">:</span> <span class="s1">&#39;YOUR_POSTGRES_SERVER_HOSTNAME_OR_IP_ADDRESS&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">user</span><span class="o">:</span> <span class="s1">&#39;YOUR_POSTGRES_USER&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">password</span><span class="o">:</span> <span class="s1">&#39;YOUR_POSTGRES_PASSWORD&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">database</span><span class="o">:</span> <span class="s1">&#39;YOUR_POSTGRES_DB&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// More adapters:</span>
</span><span class='line'>  <span class="c1">// https://github.com/balderdashy/sails</span>
</span><span class='line'>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>local.js</span><a href='http://sailsjs.org/#/documentation/anatomy/myApp/config/local.js.html'>Sails Documentation </a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* Local environment settings</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">* While you&#39;re DEVELOPING your app, this config file should include</span>
</span><span class='line'><span class="cm">* any settings specifically for your development computer (db passwords, etc.)</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">* When you&#39;re ready to deploy your app in PRODUCTION, you can always use this file</span>
</span><span class='line'><span class="cm">* for configuration options specific to the server where the app will be deployed.</span>
</span><span class='line'><span class="cm">* But environment variables are usually the best way to handle production settings.</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">* PLEASE NOTE:</span>
</span><span class='line'><span class="cm">*        This file is included in your .gitignore, so if you&#39;re using git</span>
</span><span class='line'><span class="cm">*        as a version control solution for your Sails app, keep in mind that</span>
</span><span class='line'><span class="cm">*        this file won&#39;t be committed to your repository!</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">*        Good news is, that means you can specify configuration for your local</span>
</span><span class='line'><span class="cm">*        machine in this file without inadvertently committing personal information</span>
</span><span class='line'><span class="cm">*        (like database passwords) to the repo.  Plus, this prevents other members</span>
</span><span class='line'><span class="cm">*        of your team from commiting their local configuration changes on top of yours.</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">* For more information, check out:</span>
</span><span class='line'><span class="cm">* http://links.sailsjs.org/docs/config/local</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Your SSL certificate and key, if you want to be able to serve HTTP responses</span>
</span><span class='line'>  <span class="c1">// over https:// and/or use websockets over the wss:// protocol</span>
</span><span class='line'>  <span class="c1">// (recommended for HTTP, strongly encouraged for WebSockets)</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="c1">// In this example, we&#39;ll assume you created a folder in your project, `config/ssl`</span>
</span><span class='line'>  <span class="c1">// and dumped your certificate/key files there:</span>
</span><span class='line'>  <span class="c1">// ssl: {</span>
</span><span class='line'>  <span class="c1">//   ca: require(&#39;fs&#39;).readFileSync(__dirname + &#39;./ssl/my_apps_ssl_gd_bundle.crt&#39;),</span>
</span><span class='line'>  <span class="c1">//   key: require(&#39;fs&#39;).readFileSync(__dirname + &#39;./ssl/my_apps_ssl.key&#39;),</span>
</span><span class='line'>  <span class="c1">//   cert: require(&#39;fs&#39;).readFileSync(__dirname + &#39;./ssl/my_apps_ssl.crt&#39;)</span>
</span><span class='line'>  <span class="c1">// },</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// The `port` setting determines which TCP port your app will be deployed on</span>
</span><span class='line'>  <span class="c1">// Ports are a transport-layer concept designed to allow many different</span>
</span><span class='line'>  <span class="c1">// networking applications run at the same time on a single computer.</span>
</span><span class='line'>  <span class="c1">// More about ports: http://en.wikipedia.org/wiki/Port_(computer_networking)</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="c1">// By default, if it&#39;s set, Sails uses the `PORT` environment variable.</span>
</span><span class='line'>  <span class="c1">// Otherwise it falls back to port 1337.</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="c1">// In production, you&#39;ll probably want to change this setting</span>
</span><span class='line'>  <span class="c1">// to 80 (http://) or 443 (https://) if you have an SSL certificate</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">port</span><span class="o">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">PORT</span> <span class="o">||</span> <span class="mi">1337</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// The runtime &quot;environment&quot; of your Sails app is either &#39;development&#39; or &#39;production&#39;.</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="c1">// In development, your Sails app will go out of its way to help you</span>
</span><span class='line'>  <span class="c1">// (for instance you will receive more descriptive error and debugging output)</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="c1">// In production, Sails configures itself (and its dependencies) to optimize performance.</span>
</span><span class='line'>  <span class="c1">// You should always put your app in production mode before you deploy it to a server-</span>
</span><span class='line'>  <span class="c1">// This helps ensure that your Sails app remains stable, performant, and scalable.</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="c1">// By default, Sails sets its environment using the `NODE_ENV` environment variable.</span>
</span><span class='line'>  <span class="c1">// If NODE_ENV is not set, Sails will run in the &#39;development&#39; environment.</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">environment</span><span class="o">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">NODE_ENV</span> <span class="o">||</span> <span class="s1">&#39;development&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sails Blueprint API]]></title>
    <link href="http://paveldemyanenko.github.io/blog/2015/01/07/sails-blueprint-api/"/>
    <updated>2015-01-07T22:52:43+03:00</updated>
    <id>http://paveldemyanenko.github.io/blog/2015/01/07/sails-blueprint-api</id>
    <content type="html"><![CDATA[<p>Blueprint API состоит из blueprint routes и blueprint actions, которые создают логику для <a href="https://ru.wikipedia.org/wiki/REST">RESTful JSON API</a> каждый раз, когда создается модель и контроллер.</p>

<p>Например, если создать модель пользователя и соответствующий контроллер в проекте, то blueprint api позволит сразу создать пользователя /user/create?name=vanya и просмотреть массив созданных пользователей /user, не написав для этого ни одной строчки кода.</p>

<p>Blueprints удобно использовать при прототипирование, но и в продакшене тоже являются сильным инструментом так как могут быть расширены.</p>

<!--more-->


<h3>Blueprint Routes</h3>

<p>Когда запускается приложение с помощью <code>sails lift</code> и blueprints включены, то фреймворк инспектирует ваши контроллеры, модели и конфигурации, чтобы назанчить необходимые роуты автоматически. Эти неявные роуты (иногда называемые &ldquo;тени&rdquo;) позволяют приложению реагировать на те или иные запросы без необходимости привязки этих роутов вручную в сonfig/routes.js файле. По умолчанию &ldquo;тени&rdquo; указывают на соответствующие действий (см. &ldquo;blueprint actions&rdquo; ниже), любое из которых может быть переопределенно своим кодом.</p>

<p>Есть три вида blueprint роутов в Sails:</p>

<p><strong>RESTful routes</strong>, когда роут всегда /:modelIdentity или /:modelIdentity/:id. Эти роуты использует HTTP методы POST, DELETE и так далее.</p>

<p><strong>Shortcut routes</strong>, когда действие содержится в роуте. Например, /user/create?name=vanya создаст нового пользователя, в то время как user/update/1?name=pavel обновит запись для первого пользователя. Эти роуты отвечают только на GET запросы. Полезная фича для дева, но в продакшене лучше выключить.</p>

<p><strong>Action routes</strong>, которые автоматически создаются для кастомных контроллеров. Например, есть контроллер FooController.js с bar методом, тогда роут /foo/bar будет автоматически создан, если blueprints включены. В отличие от остальных типов роутов эти не требуют, чтобы у контроллера была соответствующая модель.</p>

<p><a href="http://sailsjs.org/#/documentation/reference/sails.config/sails.config.blueprints.html">Подраздел конфигураций</a>, в том числе, как включить/отключить различные роуты.</p>

<h3>Blueprint Actions</h3>

<p>Blueprint actions (не путать с blueprint action routes) — это общие методы, направленные на работу с любым контроллером, который имеет модель с таким же именем. Можно думать о них, как о поведение по умолчанию для приложения. Например, если существует модель User.js и соответствующий контроллер UserController.js, то методы create, update, find, destroy, populate, add, remove будут доступны без необходимости писать их.</p>

<p>По умолчанию RESTful routes и shortcut routes привязаны к соответствующим общим методам. Тем не менее, любой такой метод может быть переопределен для конкретного контроллера путем создания этого метода в файле контроллера (FooController.find). Кроме того можно переопределить методы во всем приложение, создав кастомные методы (api/blueprints/create.js).</p>

<p>Текущая версия Sails поддерживает следующие методы:</p>

<ol>
<li><a href="http://sailsjs.org/#/documentation/reference/blueprint-api/Find.html">find</a></li>
<li><a href="http://sailsjs.org/#/documentation/reference/blueprint-api/FindOne.html">findOne</a></li>
<li><a href="http://sailsjs.org/#/documentation/reference/blueprint-api/Create.html">create</a></li>
<li><a href="http://sailsjs.org/#/documentation/reference/blueprint-api/Update.html">update</a></li>
<li><a href="http://sailsjs.org/#/documentation/reference/blueprint-api/Destroy.html">destroy</a></li>
<li><a href="http://sailsjs.org/#/documentation/reference/blueprint-api/Populate.html">populate</a></li>
<li><a href="http://sailsjs.org/#/documentation/reference/blueprint-api/Add.html">add</a></li>
<li><a href="http://sailsjs.org/#/documentation/reference/blueprint-api/Remove.html">remove</a></li>
</ol>


<p>Расмотренные методы blueprint API один в один, как методы выше.</p>

<h3>Переопределение blueprints</h3>

<p>Чтобы переопределить blueprints в Sails v0.10 можно создать папку api/blueprints и добавить туда свои файлы (например, find.js, create.js и т.п). Можно посмотреть на код по умолчанию для начала.</p>

<p><strong>Важно</strong>: Все файлы должны быть в нижнем регистре! По умолчанию действия, например, findOne.js, но в /api/blueprints должны быть findone.js.</p>

<p>Добавление пользовательских blueprint также поддерживаются, но они в настоящее время не получают автоматическую привязку к роутам. Если создаеть /blueprints/foo.js файл, то нужно связать роуты до него в /config/routes.js файле, например:</p>

<p>GET /myRoute&#8217;: {blueprint: &lsquo;foo&rsquo;}</p>

<p>Отключение blueprints контроллера:</p>

<p>Также можно переопределить любые настройки из config/blueprints.js для каждого контроллера путем осоздания объекта _config в контроллере и присвоение ему конфигурации с переопределением настроек.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>module.exports = {
</span><span class='line'>  _config: {
</span><span class='line'>    actions: false,
</span><span class='line'>    shortcuts: false,
</span><span class='line'>    rest: false
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
